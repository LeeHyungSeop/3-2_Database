<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/ihyeongseob/Desktop/인천대/3학년/2학기/데이터베이스/SQL_실습/admission.db" readonly="0" foreign_keys="" case_sensitive_like="" temp_store="" wal_autocheckpoint="" synchronous=""/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2246"/><column_width id="4" width="0"/></tab_structure><tab_browse><current_table name="0,0:"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 26">-- Practice

--  1. GPA가 3.6보다 큰 학생의 아이디, 이름, GPA를 구하시오


-- 2. GPA가 3.6보다 큰 학생의 정보를 구하시오


-- 3. CS에 합격한 학생의 아이디를 구하시오


-- 3.1 만약 CS에 합격한 경우는 몇 개인가?


-- 6. 지원한 학생의 아이디, 이름, GPA, 지원대학이름, 대학등록생수를 구하시오


-- 7. bio관련 학과(이름에 bio라는 글자가 들어가는 학과)에 지원한 학생의 아이디와 전공을 구하시오

-- 학생의 아이디, 이름, GPA, sizeHS를 구하시오

-- 1. 고등학교의 학생수가 많으면 GPA를 올려주고, 학생수가 적으면 GPA를 내려줌
-- scaledGPA = GPA * (sizeHS / 1000.0)


-- 2. 학생의 아이디, 이름, GPA, 지원대학, 대학등록생(enrollment)을 구하시오


-- 3. GPA가 같은 학생의 쌍을 구하시오 (학생1의 아이디, 이름, GPA, 학생2의 아이디, 이름, GPA)

-- 1. 학생이름과 학교이름을 모두 구하시오.

-- 2. Student table에는 동명이인 (Amy, Craig)이 있었는데 UNION(합집합)을 사용했더니 중복이 사라짐.
-- 그런데 만약 학생, 학교가 몇 명 있는지 count하기 위한 의도였다면, 중복이 사라지면 안됌. -&gt; ALL


-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 3. CS와 EE에 모두 지원한 학생의 아이디를 구하시오. 

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 4. CS와 EE에 모두 지원한 학생의 아이디를 구하시오. 


-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 5. CS에 지원하고, EE에는 지원하지 않은 학생을 구하라 


-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 6. CS에 지원하고, EE에는 지원하지 않은 학생을 구하라 (join 연산자로 바꿀 수 있을까?)
-- 모든 집합 연산자를 join 연산자로 바꿀 수 있는 것은 아니다! (더 공부 해봐야 할듯)



-------------------------------------------------------------------------------------------------------------
-- 1. CS에 지원한 학생의 아이디, 이름을 구하시오 (IN 연산자 사용 X)

-------------------------------------------------------------------------------------------------------------
-- 2. CS에 지원한 학생의 아이디, 이름을 구하시오 (IN 연산자 사용 O)

-------------------------------------------------------------------------------------------------------------
-- 3-1) CS에 지원한 학생의 GPA를 구하시오. (IN 연산자 사용 X)

-------------------------------------------------------------------------------------------------------------
-- 3-2) CS에 지원한 학생의 GPA를 구하시오. (IN 연산자 사용 O)	

-------------------------------------------------------------------------------------------------------------
-- 4-1) CS에 지원하고, EE에는 지원하지 않은 학생의 아이디와 이름을 구하시오  (차집합 사용)


-------------------------------------------------------------------------------------------------------------
-- 4-2) CS에 지원하고, EE에는 지원하지 않은 학생의 아이디와 이름을 구하시오  (IN 사용)


-------------------------------------------------------------------------------------------------------------
-- 같은 주(state)에 다른 대학이 있는 대학의 이름과 주(state)


-------------------------------------------------------------------------------------------------------------
-- 6. 재학생수(enrollment)가 가장 많은 대학의 이름을 구하시오.

-------------------------------------------------------------------------------------------------------------
-- 7. GPA가 가장 높은 학생의 이름과 GPA를 구하시오


-------------------------------------------------------------------------------------------------------------
-- 8. ALL, ANY로 구현할 수 있는데 SQLite에서는 구현되지는 않는다.
-- 모든 GPA를 구하고, 그 GPA들보다 크거나 같은 GPA를 구하라

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 1. 모든 학생의 GPA의 평균을 구하시오

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 2. CS에 지원한 학생 중 최소 GPA를 구하시오.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 3. CS에 지원한 학생의 GPA 평균을 구하시오. (*****)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 4. 등록학생 (enrollment)가 15,000보다 큰 대학의 숫자를 구하시오, (count 사용)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 5. &quot;Cornell&quot;대학에 지원된 숫자를 구하시오

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 6. &quot;Cornell&quot;대학에 지원한 학생은 몇 명인가?  (*****)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 1. 각 대학별로 지원(applications)의 숫자를 구하시오

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 2. 각 주(state)별로 등록생수(enrollment)의 합을 구하시오

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 3. 대학, 전공 별로 지원자의 최대 GPA, 최소 GPA를 구하시오.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 4. 학생의 아이디, 학생 이름, 학생이 지원한 대학의 숫자를 구하시오. (*****)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
--  5. 지원(applications) 숫자가 5보다 작은 대학의 이름

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 6. 지원학생(applicant) 숫자가 5보다 작은 대학의 이름

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 3. 1., 2.를 UNION하면 전체 학생이 다 나오는가? 아니다. NULL값도 존재한다 (******)
-- SELECT sID, sName, GPA
-- FROM Student
-- WHERE GPA &gt;= 3.5 or GPA &lt; 3.5 or GPA IS NULL

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 1. 새로운 대학 isert ('CMU', 'PA', 11500) 

-----------------------------------------------------------------------------------------------------z------------------------------------------------------------
-- 2. 어느 대학에도 지원하지 않은 학생의 sID를 구하시오

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 3. 어느 대학에도 지원하지 않은 학생을 CMU대학의 CS에 지원하고 결과는 알려지지 않은 것으로 처리하시오.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 4. 다른 대학 EE에 지원했으나 떨어진 학생을 CMU EE에 합격한 것으로 처리하시오

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 2. 2개보다 많은 전공(major)에 지원한 학생을 지우시오

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 3. Bob의 sID를 111로 바꾸시오


</sql><current_tab id="0"/></tab_sql></sqlb_project>
